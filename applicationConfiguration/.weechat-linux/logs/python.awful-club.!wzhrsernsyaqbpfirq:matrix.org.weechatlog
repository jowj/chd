2019-07-25 23:17:19	--	Notice(travis-ci): Change view : https://github.com/ruma/ruma-api-macros/compare/abc081963bd0...6fd590a4eb5c
2019-07-25 23:17:19	--	Notice(travis-ci): Build details : https://travis-ci.org/ruma/ruma-api-macros/builds/563786667
2019-07-25 23:18:02	<--	travis-ci (@freenode_travis-ci:matrix.org) has left #Ruma
2019-07-25 23:18:02	-->	travis-ci (@freenode_travis-ci:matrix.org) has joined #Ruma
2019-07-25 23:18:03	--	Notice(travis-ci): Change view : https://github.com/ruma/ruma-client-api/compare/41ca8cbe7fd2...1b69ef5aac5b
2019-07-25 23:18:03	--	Notice(travis-ci): Build details : https://travis-ci.org/ruma/ruma-client-api/builds/563786873
2019-07-25 23:28:07	<--	travis-ci (@freenode_travis-ci:matrix.org) has left #Ruma
2019-07-25 23:28:07	-->	travis-ci (@freenode_travis-ci:matrix.org) has joined #Ruma
2019-07-25 23:28:08	--	Notice(travis-ci): Change view : https://github.com/ruma/ruma-client-api/compare/e8ba1e2b4cd3...3df41b778553
2019-07-25 23:28:08	--	Notice(travis-ci): Build details : https://travis-ci.org/ruma/ruma-client-api/builds/563788881
2019-07-25 23:44:20	<--	travis-ci (@freenode_travis-ci:matrix.org) has left #Ruma
2019-07-25 23:44:21	-->	travis-ci (@freenode_travis-ci:matrix.org) has joined #Ruma
2019-07-25 23:44:21	--	Notice(travis-ci): Change view : https://github.com/ruma/ruma-client/compare/da12802f6ac8...bdb945d3f7b7
2019-07-25 23:44:21	--	Notice(travis-ci): Build details : https://travis-ci.org/ruma/ruma-client/builds/563794104
2019-07-26 16:42:03	&jimmycuadra	> In reply to @chronosx88:netwhood.online
2019-07-26 16:42:03		> Hello everyone. Where I can read about how works /sync
2019-07-26 16:42:03		> method more detaily (in Matrix specs its described very
2019-07-26 16:42:03		> poor)?
2019-07-26 16:42:03		What do you want to know, specifically? #matrix-dev:matrix.org might be the best place to ask questions about the spec, or to provide feedback on the way the spec is written if you find it difficult to understand.
2019-07-26 16:54:13	<--	travis-ci (@freenode_travis-ci:matrix.org) has left #Ruma
2019-07-26 16:54:21	-->	travis-ci (@freenode_travis-ci:matrix.org) has joined #Ruma
2019-07-26 16:54:21	--	Notice(travis-ci): Change view : https://github.com/ruma/ruma-api-macros/compare/fd8367be4c96...02bcb5f03843
2019-07-26 16:54:23	--	Notice(travis-ci): Build details : https://travis-ci.org/ruma/ruma-api-macros/builds/564101384
2019-07-27 12:25:25	@jplatte	So.. I had a look at implementing what I think Ralith suggested to skip syncing previous events: filtering with limit 0. We... might want to make this a bit easier :D
2019-07-27 12:25:25		                                                   
2019-07-27 12:25:25		  SyncFilter::FilterDefinition(FilterDefinition {  
2019-07-27 12:25:25		      event_fields: Vec::new(),                    
2019-07-27 12:25:25		      event_format: None,                          
2019-07-27 12:25:25		      account_data: Some(Filter {                  
2019-07-27 12:25:25		          limit: Some(UInt::from(0u32)),           
2019-07-27 12:25:25		          //..Filter::default()                    
2019-07-27 12:25:25		          senders: Vec::new(),                     
2019-07-27 12:25:25		          not_senders: Vec::new(),                 
2019-07-27 12:25:25		          types: Vec::new(),                       
2019-07-27 12:25:25		          not_types: Vec::new(),                   
2019-07-27 12:25:25		      }),                                          
2019-07-27 12:25:25		      room: Some(RoomFilter {                      
2019-07-27 12:25:25		          account_data: Some(RoomEventFilter {     
2019-07-27 12:25:25		              limit: Some(UInt::from(0u32)),       
2019-07-27 12:25:25		              //..RoomEventFilter::default()       
2019-07-27 12:25:25		              rooms: Vec::new(),                   
2019-07-27 12:25:25		              not_rooms: Vec::new(),               
2019-07-27 12:25:25		              senders: Vec::new(),                 
2019-07-27 12:25:25		              not_senders: Vec::new(),             
2019-07-27 12:25:25		              types: Vec::new(),                   
2019-07-27 12:25:25		              not_types: Vec::new(),               
2019-07-27 12:25:25		          }),                                      
2019-07-27 12:25:25		          timeline: Some(RoomEventFilter {         
2019-07-27 12:25:25		              limit: Some(UInt::from(0u32)),       
2019-07-27 12:25:25		              //..RoomEventFilter::default()       
2019-07-27 12:25:25		              rooms: Vec::new(),                   
2019-07-27 12:25:25		              not_rooms: Vec::new(),               
2019-07-27 12:25:25		              senders: Vec::new(),                 
2019-07-27 12:25:25		              not_senders: Vec::new(),             
2019-07-27 12:25:25		              types: Vec::new(),                   
2019-07-27 12:25:25		              not_types: Vec::new(),               
2019-07-27 12:25:25		          }),                                      
2019-07-27 12:25:25		          ephemeral: Some(RoomEventFilter {        
2019-07-27 12:25:25		              limit: Some(UInt::from(0u32)),       
2019-07-27 12:25:25		              //..RoomEventFilter::default()       
2019-07-27 12:25:25		              rooms: Vec::new(),                   
2019-07-27 12:25:25		              not_rooms: Vec::new(),               
2019-07-27 12:25:25		              senders: Vec::new(),                 
2019-07-27 12:25:25		              not_senders: Vec::new(),             
2019-07-27 12:25:25		              types: Vec::new(),                   
2019-07-27 12:25:25		              not_types: Vec::new(),               
2019-07-27 12:25:25		          }),                                      
2019-07-27 12:25:25		          state: Some(RoomEventFilter {            
2019-07-27 12:25:25		              limit: Some(UInt::from(0u32)),       
2019-07-27 12:25:25		              //..RoomEventFilter::default()       
2019-07-27 12:25:25		              rooms: Vec::new(),                   
2019-07-27 12:25:25		              not_rooms: Vec::new(),               
2019-07-27 12:25:25		              senders: Vec::new(),                 
2019-07-27 12:25:25		              not_senders: Vec::new(),             
2019-07-27 12:25:25		              types: Vec::new(),                   
2019-07-27 12:25:25		              not_types: Vec::new(),               
2019-07-27 12:25:25		          }),                                      
2019-07-27 12:25:25		          //..RoomFilter::default()                
2019-07-27 12:25:25		          include_leave: None,                     
2019-07-27 12:25:25		          rooms: Vec::new(),                       
2019-07-27 12:25:25		          not_rooms: Vec::new(),                   
2019-07-27 12:25:25		      }),                                          
2019-07-27 12:25:25		      presence: Some(Filter {                      
2019-07-27 12:25:25		          limit: Some(UInt::from(0u32)),           
2019-07-27 12:25:25		          //..Filter::default()                    
2019-07-27 12:25:25		          senders: Vec::new(),                     
2019-07-27 12:25:25		          not_senders: Vec::new(),                 
2019-07-27 12:25:25		          types: Vec::new(),                       
2019-07-27 12:25:25		          not_types: Vec::new(),                   
2019-07-27 12:25:25		      }),                                          
2019-07-27 12:25:25		  })                                               
2019-07-27 12:25:25		                                                   
2019-07-27 12:25:25		                                                   
2019-07-27 12:25:25		
2019-07-27 14:43:25	<--	Bonstra (@freenode_Bonstra:matrix.org) has left #Ruma
2019-07-27 14:57:22	ralith	no Default impls yet?
2019-07-27 14:59:28	@jplatte	No
2019-07-27 15:00:21	@jplatte	I'll create a PR soon-ish though
2019-07-27 15:02:18	-->	nardis (@nardis:matrix.org) has joined #Ruma
2019-07-27 15:05:07	-->	Bonstra (@freenode_Bonstra:matrix.org) has joined #Ruma
2019-07-27 19:26:16	&jimmycuadra	just finished recording my interview for the rustacean station podcast about matrix/ruma. it went really well :}
2019-07-27 23:31:03	-->	bnjbvr (@bnjbvr:delire.party) has joined #Ruma
2019-07-28 09:21:48	paulvt	Oh great! Looking forward to it... but got quite the podcast queue growing 😅️
2019-07-25 23:18:02	◀▬▬	@freenode_travis-ci:matrix.org (None) has left #Ruma
2019-07-25 23:18:02	▬▬▶	travis-ci (@freenode_travis-ci:matrix.org) has joined #Ruma
2019-07-25 23:18:03	--	Notice(travis-ci): Change view : https://github.com/ruma/ruma-client-api/compare/41ca8cbe7fd2...1b69ef5aac5b
2019-07-25 23:18:03	--	Notice(travis-ci): Build details : https://travis-ci.org/ruma/ruma-client-api/builds/563786873
2019-07-25 23:28:07	◀▬▬	travis-ci (@freenode_travis-ci:matrix.org) has left #Ruma
2019-07-25 23:28:07	▬▬▶	travis-ci (@freenode_travis-ci:matrix.org) has joined #Ruma
2019-07-25 23:28:08	--	Notice(travis-ci): Change view : https://github.com/ruma/ruma-client-api/compare/e8ba1e2b4cd3...3df41b778553
2019-07-25 23:28:08	--	Notice(travis-ci): Build details : https://travis-ci.org/ruma/ruma-client-api/builds/563788881
2019-07-25 23:44:20	◀▬▬	travis-ci (@freenode_travis-ci:matrix.org) has left #Ruma
2019-07-25 23:44:21	▬▬▶	travis-ci (@freenode_travis-ci:matrix.org) has joined #Ruma
2019-07-25 23:44:21	--	Notice(travis-ci): Change view : https://github.com/ruma/ruma-client/compare/da12802f6ac8...bdb945d3f7b7
2019-07-25 23:44:21	--	Notice(travis-ci): Build details : https://travis-ci.org/ruma/ruma-client/builds/563794104
2019-07-26 16:42:03	&jimmycuadra	> In reply to @chronosx88:netwhood.online
2019-07-26 16:42:03		> Hello everyone. Where I can read about how works /sync
2019-07-26 16:42:03		> method more detaily (in Matrix specs its described very
2019-07-26 16:42:03		> poor)?
2019-07-26 16:42:03		What do you want to know, specifically? #matrix-dev:matrix.org might be the best place to ask questions about the spec, or to provide feedback on the way the spec is written if you find it difficult to understand.
2019-07-26 16:54:13	◀▬▬	travis-ci (@freenode_travis-ci:matrix.org) has left #Ruma
2019-07-26 16:54:21	▬▬▶	travis-ci (@freenode_travis-ci:matrix.org) has joined #Ruma
2019-07-26 16:54:21	--	Notice(travis-ci): Change view : https://github.com/ruma/ruma-api-macros/compare/fd8367be4c96...02bcb5f03843
2019-07-26 16:54:23	--	Notice(travis-ci): Build details : https://travis-ci.org/ruma/ruma-api-macros/builds/564101384
2019-07-27 12:25:25	@jplatte	So.. I had a look at implementing what I think Ralith suggested to skip syncing previous events: filtering with limit 0. We... might want to make this a bit easier :D
2019-07-27 12:25:25		                                                   
2019-07-27 12:25:25		  SyncFilter::FilterDefinition(FilterDefinition {  
2019-07-27 12:25:25		      event_fields: Vec::new(),                    
2019-07-27 12:25:25		      event_format: None,                          
2019-07-27 12:25:25		      account_data: Some(Filter {                  
2019-07-27 12:25:25		          limit: Some(UInt::from(0u32)),           
2019-07-27 12:25:25		          //..Filter::default()                    
2019-07-27 12:25:25		          senders: Vec::new(),                     
2019-07-27 12:25:25		          not_senders: Vec::new(),                 
2019-07-27 12:25:25		          types: Vec::new(),                       
2019-07-27 12:25:25		          not_types: Vec::new(),                   
2019-07-27 12:25:25		      }),                                          
2019-07-27 12:25:25		      room: Some(RoomFilter {                      
2019-07-27 12:25:25		          account_data: Some(RoomEventFilter {     
2019-07-27 12:25:25		              limit: Some(UInt::from(0u32)),       
2019-07-27 12:25:25		              //..RoomEventFilter::default()       
2019-07-27 12:25:25		              rooms: Vec::new(),                   
2019-07-27 12:25:25		              not_rooms: Vec::new(),               
2019-07-27 12:25:25		              senders: Vec::new(),                 
2019-07-27 12:25:25		              not_senders: Vec::new(),             
2019-07-27 12:25:25		              types: Vec::new(),                   
2019-07-27 12:25:25		              not_types: Vec::new(),               
2019-07-27 12:25:25		          }),                                      
2019-07-27 12:25:25		          timeline: Some(RoomEventFilter {         
2019-07-27 12:25:25		              limit: Some(UInt::from(0u32)),       
2019-07-27 12:25:25		              //..RoomEventFilter::default()       
2019-07-27 12:25:25		              rooms: Vec::new(),                   
2019-07-27 12:25:25		              not_rooms: Vec::new(),               
2019-07-27 12:25:25		              senders: Vec::new(),                 
2019-07-27 12:25:25		              not_senders: Vec::new(),             
2019-07-27 12:25:25		              types: Vec::new(),                   
2019-07-27 12:25:25		              not_types: Vec::new(),               
2019-07-27 12:25:25		          }),                                      
2019-07-27 12:25:25		          ephemeral: Some(RoomEventFilter {        
2019-07-27 12:25:25		              limit: Some(UInt::from(0u32)),       
2019-07-27 12:25:25		              //..RoomEventFilter::default()       
2019-07-27 12:25:25		              rooms: Vec::new(),                   
2019-07-27 12:25:25		              not_rooms: Vec::new(),               
2019-07-27 12:25:25		              senders: Vec::new(),                 
2019-07-27 12:25:25		              not_senders: Vec::new(),             
2019-07-27 12:25:25		              types: Vec::new(),                   
2019-07-27 12:25:25		              not_types: Vec::new(),               
2019-07-27 12:25:25		          }),                                      
2019-07-27 12:25:25		          state: Some(RoomEventFilter {            
2019-07-27 12:25:25		              limit: Some(UInt::from(0u32)),       
2019-07-27 12:25:25		              //..RoomEventFilter::default()       
2019-07-27 12:25:25		              rooms: Vec::new(),                   
2019-07-27 12:25:25		              not_rooms: Vec::new(),               
2019-07-27 12:25:25		              senders: Vec::new(),                 
2019-07-27 12:25:25		              not_senders: Vec::new(),             
2019-07-27 12:25:25		              types: Vec::new(),                   
2019-07-27 12:25:25		              not_types: Vec::new(),               
2019-07-27 12:25:25		          }),                                      
2019-07-27 12:25:25		          //..RoomFilter::default()                
2019-07-27 12:25:25		          include_leave: None,                     
2019-07-27 12:25:25		          rooms: Vec::new(),                       
2019-07-27 12:25:25		          not_rooms: Vec::new(),                   
2019-07-27 12:25:25		      }),                                          
2019-07-27 12:25:25		      presence: Some(Filter {                      
2019-07-27 12:25:25		          limit: Some(UInt::from(0u32)),           
2019-07-27 12:25:25		          //..Filter::default()                    
2019-07-27 12:25:25		          senders: Vec::new(),                     
2019-07-27 12:25:25		          not_senders: Vec::new(),                 
2019-07-27 12:25:25		          types: Vec::new(),                       
2019-07-27 12:25:25		          not_types: Vec::new(),                   
2019-07-27 12:25:25		      }),                                          
2019-07-27 12:25:25		  })                                               
2019-07-27 12:25:25		                                                   
2019-07-27 12:25:25		                                                   
2019-07-27 12:25:25		
2019-07-27 14:43:25	◀▬▬	Bonstra (@freenode_Bonstra:matrix.org) has left #Ruma
2019-07-27 14:57:22	ralith	no Default impls yet?
2019-07-27 14:59:28	@jplatte	No
2019-07-27 15:00:21	@jplatte	I'll create a PR soon-ish though
2019-07-27 15:02:18	▬▬▶	nardis (@nardis:matrix.org) has joined #Ruma
2019-07-27 15:05:07	▬▬▶	Bonstra (@freenode_Bonstra:matrix.org) has joined #Ruma
2019-07-27 19:26:16	&jimmycuadra	just finished recording my interview for the rustacean station podcast about matrix/ruma. it went really well :}
2019-07-27 23:31:03	▬▬▶	bnjbvr (@bnjbvr:delire.party) has joined #Ruma
2019-07-28 09:21:48	paulvt	Oh great! Looking forward to it... but got quite the podcast queue growing 😅️
