# playbook to go from a "base configured" server to a wg vpn peer

- hosts: vpn
  remote_user: josiah
  gather_facts: false
  become: yes
  vars:
    vpn_packages: [ 'strongswan','strongswan-pki','ufw' ]
    remote_host: 165.22.156.25
    local_host:  0.0.0.0

  tasks:
    - name: Install required system packages
      apt: name={{ vpn_packages }} state=latest

    - name: set kernel params
      shell: |
        echo "deb http://deb.debian.org/debian/ unstable main" > /etc/apt/sources.list.d/unstable.list
        printf 'Package: *\nPin: release a=unstable\nPin-Priority: 90\n' > /etc/apt/preferences.d/limit-unstable

    - name: Update apt
      apt: update_cache=yes

    - name: install wireguard
      apt: install wireguard

    - name: Generate keys, register public key to be used later
      shell: |
        printf "[Interface]\nPrivateKey = " > wg0.conf
        wg genkey | tee -a wg0.conf | wg pubkey > publickey
      register: server_publickey
      vars:
        chdir: /etc/wireguard/
        umask: "077"

    - name: fill out the rest of the wg0.conf file
      shell: |
        ListenPort = 51820
        Address = 10.200.219.1/24     (this will be the IP given to the wg0 interface)
        [Peer]
        PublicKey = (leave this blank for now; you'll paste in your local public key here soon)
        AllowedIPs = 10.200.219.0/24  (this is the range of Wireguard IP addresses that this Peer's key can be used from)

    - name: bring wg up
      shell: wg-quick up wg0

    - name: test if it worked
      ping -c1 10.200.219.1
